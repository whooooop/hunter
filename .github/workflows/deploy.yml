name: Deploy Applications

on:
  workflow_dispatch:
    inputs:
      application:
        description: 'Application to deploy'
        required: true
        type: choice
        options:
          - server
          - game
          - all

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Server
        if: ${{ github.event.inputs.application == 'server' || github.event.inputs.application == 'all' }}
        run: |
          docker build -t ${{ vars.APP_NAME }}-server:${{ github.sha }} .
          docker save -o ${{ vars.APP_NAME }}-server.image.tar ${{ vars.APP_NAME }}-server:${{ github.sha }}
          
          scp -P ${{ secrets.SSH_PORT }} ${{ vars.APP_NAME }}-server.image.tar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/${{ vars.APP_NAME }}-server/
          
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd /opt/${{ vars.APP_NAME }}-server
            docker image prune -af
            docker load -i ${{ vars.APP_NAME }}-server.image.tar
            docker stop ${{ vars.APP_NAME }}-server || true
            docker rm ${{ vars.APP_NAME }}-server || true
            docker run \
              -d \
              --restart always \
              --memory 512m \
              --memory-swap 512m \
              -p 3434:3000 \
              --name ${{ vars.APP_NAME }}-server \
              ${{ vars.APP_NAME }}-server:${{ github.sha }}
          '

      - name: Deploy Game
        if: ${{ github.event.inputs.application == 'game' || github.event.inputs.application == 'all' }}
        run: |
          docker build -t ${{ vars.APP_NAME }}-game:${{ github.sha }} .
          docker save -o ${{ vars.APP_NAME }}-game.image.tar ${{ vars.APP_NAME }}-game:${{ github.sha }}
          
          scp -P ${{ secrets.SSH_PORT }} ${{ vars.APP_NAME }}-game.image.tar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/${{ vars.APP_NAME }}-game/
          
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd /opt/${{ vars.APP_NAME }}-game
            docker image prune -af
            docker load -i ${{ vars.APP_NAME }}-game.image.tar
            docker stop ${{ vars.APP_NAME }}-game || true
            docker rm ${{ vars.APP_NAME }}-game || true
            docker run \
              -d \
              --restart always \
              -p 8081:8081 \
              --name ${{ vars.APP_NAME }}-game \
              ${{ vars.APP_NAME }}-game:${{ github.sha }}
          ' 