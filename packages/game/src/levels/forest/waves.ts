import { DISPLAY } from "../../config";
import { Enemy, Wave } from "../../types";

export function createWavesConfig(): Wave.Config[] {
  const x = DISPLAY.WIDTH;
  const minY = 150;
  const maxY = DISPLAY.HEIGHT - 50;
  const y = (r: 1 | 2 | 3 | 4 | 5) => {
    const zoneSize = (maxY - minY) / 5;
    const zoneStart = minY + zoneSize * (r - 1);
    const zoneEnd = zoneStart + zoneSize;
    return Phaser.Math.Between(Math.floor(zoneStart), Math.floor(zoneEnd));
  }

  const wave1 = {
    waitAllEnemiesDead: true,
    spawns: [
      { delay: 2000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 4000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 4000, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.HARE } },

      { delay: 5000, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(5), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 4000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, vy: 0.5, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(1), vx: -3, vy: 0.7, type: Enemy.Type.HARE } },

      { delay: 5000, state: { x, y: y(2), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(3), vx: -3, vy: 1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -4, type: Enemy.Type.SQUIREEL } },

      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -4, type: Enemy.Type.SQUIREEL } },

      {
        delay: 3000, state: { x, y: y(3), vx: -2, type: Enemy.Type.DEER, boss: true },
      },
    ],
  }

  const wave2 = {
    waitAllEnemiesDead: true,
    spawns: [
      { delay: 2500, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2500, state: { x, y: y(1), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 2500, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(1), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(3), vx: -4, type: Enemy.Type.SQUIREEL } },

      { delay: 4000, state: { x, y: y(2), vx: -5, type: Enemy.Type.WOLF } },
      { delay: 0, state: { x, y: y(4), vx: -5, type: Enemy.Type.WOLF } },

      { delay: 2500, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1500, state: { x, y: y(2), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1500, state: { x, y: y(4), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 1500, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1500, state: { x, y: y(1), vx: -4, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 2000, state: { x, y: y(3), vx: -5, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.HARE } },

      { delay: 4000, state: { x, y: y(2), vx: -5, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(4), vx: -5, type: Enemy.Type.WOLF } },

      { delay: 5000, state: { x, y: y(3), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 2000, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.HARE } },
      { delay: 1500, state: { x, y: y(4), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 3000, state: { x, y: y(5), vx: -5, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1500, state: { x, y: y(3), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(1), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },

      { delay: 6000, state: { x, y: y(1), vx: -2, vy: 0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 100, state: { x, y: y(2), vx: -2, vy: 0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 100, state: { x, y: y(3), vx: -2, vy: -0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 100, state: { x, y: y(2), vx: -2, vy: -0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 100, state: { x, y: y(5), vx: -2, vy: 0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 400, state: { x, y: y(1), vx: -2, vy: -0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 400, state: { x, y: y(2), vx: -2, vy: 0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 400, state: { x, y: y(3), vx: -2, vy: -0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 400, state: { x, y: y(4), vx: -2, vy: 0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
      { delay: 400, state: { x, y: y(5), vx: -2, vy: -0.5, type: Enemy.Type.HEDGEHOG, boss: true } },
    ],
  }

  const wave3 = {
    waitAllEnemiesDead: true,
    spawns: [
      { delay: 4000, state: { x, y: y(2), vx: -4, vy: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(4), vx: -4, vy: 2, type: Enemy.Type.CAPIBARA } },

      { delay: 4000, state: { x, y: y(1), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(2), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(2), vx: -2, vy: 1, type: Enemy.Type.SQUIREEL } },

      { delay: 3000, state: { x, y: y(5), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(4), vx: -2, vy: 1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },

      { delay: 3000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(5), vx: -5, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 2000, state: { x, y: y(2), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 3000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 0, state: { x, y: y(3), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 0, state: { x, y: y(5), vx: -2, type: Enemy.Type.HEDGEHOG } },

      { delay: 6000, state: { x, y: y(1), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(5), vx: -4, vy: 1, type: Enemy.Type.DEER_BABY } },
      { delay: 3000, state: { x, y: y(1), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(2), vx: -3, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 2000, state: { x, y: y(4), vx: -4, vy: 1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(5), vx: -2, vy: 1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 3000, state: { x, y: y(3), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(5), vx: -4, vy: 1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(4), vx: -4, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -5, vy: -1, type: Enemy.Type.CAPIBARA } },
      { delay: 3000, state: { x, y: y(2), vx: -3, vy: 1, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(4), vx: -4, vy: -1, type: Enemy.Type.CAPIBARA } },
      { delay: 2000, state: { x, y: y(5), vx: -3, vy: 1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -4, vy: 1, type: Enemy.Type.DEER_BABY } },
      { delay: 3000, state: { x, y: y(1), vx: -3, vy: 1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, vy: -1, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.HEDGEHOG } },


      { delay: 6000, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, vy: 1, type: Enemy.Type.SQUIREEL } },
      { delay: 100, state: { x, y: y(1), vx: -3, vy: 1, type: Enemy.Type.RACCOON } },
      { delay: 400, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.HEDGEHOG } },
      { delay: 400, state: { x, y: y(2), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 400, state: { x, y: y(4), vx: -3, vy: -1, type: Enemy.Type.RACCOON } },
      { delay: 400, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.HARE } },
      { delay: 400, state: { x, y: y(1), vx: -4, vy: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(5), vx: -3, vy: -2, type: Enemy.Type.HARE } },
      { delay: 300, state: { x, y: y(4), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 300, state: { x, y: y(3), vx: -5, vy: 0, type: Enemy.Type.CAPIBARA } },
      { delay: 300, state: { x, y: y(5), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 300, state: { x, y: y(3), vx: -4, vy: 1, type: Enemy.Type.SQUIREEL } },
      { delay: 300, state: { x, y: y(1), vx: -4, vy: 0, type: Enemy.Type.DEER_BABY } },
      { delay: 300, state: { x, y: y(4), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(5), vx: -3, vy: -1, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(1), vx: -4, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 400, state: { x, y: y(2), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 400, state: { x, y: y(3), vx: -3, vy: 1, type: Enemy.Type.HARE } },
      { delay: 600, state: { x, y: y(1), vx: -5, vy: -1, type: Enemy.Type.SQUIREEL } },
      { delay: 500, state: { x, y: y(4), vx: -3, vy: 1, type: Enemy.Type.HARE } },
      { delay: 500, state: { x, y: y(5), vx: -4, vy: -1, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(1), vx: -4, vy: 1, type: Enemy.Type.DEER_BABY } },

      { delay: 6000, state: { x, y: y(2), vx: -2.5, type: Enemy.Type.DEER, boss: true } },
      { delay: 1000, state: { x, y: y(4), vx: -2.5, type: Enemy.Type.DEER, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(2), vx: -3, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(1), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(3), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(5), vx: -2, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(4), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(2), vx: -3, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(3), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(5), vx: -2, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(4), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -2, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(2), vx: -1, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(5), vx: -2, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(4), vx: -1, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -2, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(2), vx: -1, vy: 1, type: Enemy.Type.MOUSE, boss: true } },
      { delay: 100, state: { x, y: y(3), vx: -2, vy: -1, type: Enemy.Type.MOUSE, boss: true } },
    ],
  }

  const wave4 = {
    waitAllEnemiesDead: true,
    spawns: [
      { delay: 6000, state: { x, y: y(1), vx: -5, type: Enemy.Type.WOLF } },
      { delay: 3000, state: { x, y: y(5), vx: -5, type: Enemy.Type.WOLF } },
      { delay: 4000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(5), vx: -5, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.HARE } },
      { delay: 100, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 3000, state: { x, y: y(5), vx: -5, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(2), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(1), vx: -5, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HARE } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 3000, state: { x, y: y(1), vx: -2, type: Enemy.Type.DEER } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(4), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 2000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(3), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(4), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 2000, state: { x, y: y(5), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(2), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(5), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 100, state: { x, y: y(3), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 3000, state: { x, y: y(4), vx: -2, type: Enemy.Type.DEER } },

      { delay: 6000, state: { x, y: y(3), vx: -3, type: Enemy.Type.HARE } },
      { delay: 1500, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.HARE } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 0, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 0, state: { x, y: y(1), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 3000, state: { x, y: y(5), vx: -3, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(4), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(4), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 3000, state: { x, y: y(5), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 0, state: { x, y: y(5), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(5), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 3000, state: { x, y: y(4), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(2), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIREEL } },

      { delay: 1000, state: { x, y: y(3), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(4), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 0, state: { x, y: y(4), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 2000, state: { x, y: y(5), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HARE } },
      { delay: 2000, state: { x, y: y(3), vx: -4, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(4), vx: -2, type: Enemy.Type.HARE } },
      { delay: 0, state: { x, y: y(5), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(5), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(2), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 0, state: { x, y: y(1), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 3000, state: { x, y: y(3), vx: -4, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(4), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(2), vx: -3, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.RACCOON } },
      { delay: 0, state: { x, y: y(3), vx: -1, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(1), vx: -4, type: Enemy.Type.WOLF } },


      { delay: 1000, state: { x, y: y(1), vx: -3, type: Enemy.Type.SQUIRREL_ANGRY, boss: true } },
      { delay: 1000, state: { x, y: y(5), vx: -1, type: Enemy.Type.SQUIRREL_ANGRY, boss: true } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.HARE } },
      { delay: 5000, state: { x, y: y(5), vx: -1, type: Enemy.Type.SQUIRREL_ANGRY, boss: true } },
      { delay: 1000, state: { x, y: y(1), vx: -1, type: Enemy.Type.SQUIRREL_ANGRY, boss: true } },
      { delay: 1000, state: { x, y: y(4), vx: -2, type: Enemy.Type.SQUIREEL } },
    ]
  }

  const wave5 = {
    waitAllEnemiesDead: true,
    spawns: [
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },
      { delay: 1000, state: { x, y: y(3), vx: -1, type: Enemy.Type.HARE } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIREEL } },

      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.DEER } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.DEER } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.DEER } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.DEER } },


      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.CAPIBARA } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.HEDGEHOG } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.WOLF } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.WOLF } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.DEER_BABY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.DEER_BABY } },

      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },
      { delay: 1000, state: { x, y: y(3), vx: -2, type: Enemy.Type.MOUSE } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.RACCOON } },

      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIRREL_ANGRY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIRREL_ANGRY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIRREL_ANGRY } },
      { delay: 1000, state: { x, y: y(1), vx: -2, type: Enemy.Type.SQUIRREL_ANGRY } },

      { delay: 1000, state: { x, y: y(1), vx: -1, type: Enemy.Type.BEAR, boss: true } },
    ]
  }

  return [
    wave1,
    wave2,
    wave3,
    wave4,
    wave5,
  ];
}